//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;

namespace int422_123b06.Entities
{
    public partial class Song
    {
        #region Primitive Properties
    
        public virtual string song_id
        {
            get;
            set;
        }
    
        public virtual string artist_id
        {
            get { return _artist_id; }
            set
            {
                try
                {
                    _settingFK = true;
                    if (_artist_id != value)
                    {
                        if (Album != null && Album.artist_id != value)
                        {
                            var previousValue = _album;
                            _album = null;
                            FixupAlbum(previousValue, skipKeys: true);
                        }
                        _artist_id = value;
                    }
                }
                finally
                {
                    _settingFK = false;
                }
            }
        }
        private string _artist_id;
    
        public virtual string album_id
        {
            get { return _album_id; }
            set
            {
                try
                {
                    _settingFK = true;
                    if (_album_id != value)
                    {
                        if (Album != null && Album.album_id != value)
                        {
                            var previousValue = _album;
                            _album = null;
                            FixupAlbum(previousValue, skipKeys: true);
                        }
                        _album_id = value;
                    }
                }
                finally
                {
                    _settingFK = false;
                }
            }
        }
        private string _album_id;
    
        public virtual string title
        {
            get;
            set;
        }

        #endregion
        #region Navigation Properties
    
        public virtual Album Album
        {
            get { return _album; }
            set
            {
                if (!ReferenceEquals(_album, value))
                {
                    var previousValue = _album;
                    _album = value;
                    FixupAlbum(previousValue);
                }
            }
        }
        private Album _album;
    
        public virtual ICollection<User_songs> User_songs
        {
            get
            {
                if (_user_songs == null)
                {
                    var newCollection = new FixupCollection<User_songs>();
                    newCollection.CollectionChanged += FixupUser_songs;
                    _user_songs = newCollection;
                }
                return _user_songs;
            }
            set
            {
                if (!ReferenceEquals(_user_songs, value))
                {
                    var previousValue = _user_songs as FixupCollection<User_songs>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupUser_songs;
                    }
                    _user_songs = value;
                    var newValue = value as FixupCollection<User_songs>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupUser_songs;
                    }
                }
            }
        }
        private ICollection<User_songs> _user_songs;

        #endregion
        #region Association Fixup
    
        private bool _settingFK = false;
    
        private void FixupAlbum(Album previousValue, bool skipKeys = false)
        {
            if (previousValue != null && previousValue.Songs.Contains(this))
            {
                previousValue.Songs.Remove(this);
            }
    
            if (Album != null)
            {
                if (!Album.Songs.Contains(this))
                {
                    Album.Songs.Add(this);
                }
                if (album_id != Album.album_id)
                {
                    album_id = Album.album_id;
                }
                if (artist_id != Album.artist_id)
                {
                    artist_id = Album.artist_id;
                }
            }
            else if (!_settingFK && !skipKeys)
            {
                album_id = null;
                artist_id = null;
            }
        }
    
        private void FixupUser_songs(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (User_songs item in e.NewItems)
                {
                    item.Song = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (User_songs item in e.OldItems)
                {
                    if (ReferenceEquals(item.Song, this))
                    {
                        item.Song = null;
                    }
                }
            }
        }

        #endregion
    }
}
